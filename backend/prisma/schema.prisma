generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String              @id @default(uuid())
  name              String
  email             String              @unique
  password          String
  cpf               String              @unique
  birthdate         DateTime            @db.Date
  gender            String
  phone             String
  cep               String
  state             String
  city              String
  street            String
  neighborhood      String
  type              String
  createdAt         DateTime            @default(now())
  FormAdoption      FormAdoption[]
  Favorites         Favorites[]
  CodeResetPassword CodeResetPassword[]
}

model Admin {
  id           String   @id @default(uuid())
  name         String
  email        String   @unique
  password     String
  cnpj         String   @unique
  phone        String?
  cellPhone    String
  photo        String
  cep          String
  state        String
  city         String
  street       String
  neighborhood String
  number       String
  openingHours String
  type         String
  createdAt    DateTime @default(now())
  Pet          Pet[]
}

model Pet {
  id             String    @id @default(uuid())
  type           String
  name           String
  age            String
  gender         String
  size           String
  photo          String
  isAdopt        Boolean   @default(false)
  personality    String[]
  organizationId String
  createdAt      DateTime  @default(now())
  deletedAt      DateTime?

  organization Admin          @relation(fields: [organizationId], references: [id])
  FormAdoption FormAdoption[]
  Favorites    Favorites[]
}

model FormAdoption {
  id           String   @id @default(uuid())
  liveIn       String
  children     Boolean
  isFirstPet   Boolean
  pets         Boolean
  describePets String?
  createdAt    DateTime @default(now())
  petId        String
  userId       String

  pet           Pet             @relation(fields: [petId], references: [id])
  user          User            @relation(fields: [userId], references: [id])
  Notifications Notifications[]
}

model Notifications {
  id             String   @id @default(uuid())
  idReceiver     String
  type           String
  formAdoptionId String
  isViewed       Boolean  @default(false)
  wasApproved    Boolean?
  message        String?
  mailTo         String?
  createdAt      DateTime @default(now())

  formAdoption FormAdoption @relation(fields: [formAdoptionId], references: [id])
}

model Favorites {
  id     String @id @default(uuid())
  petId  String
  userId String

  pet  Pet  @relation(fields: [petId], references: [id])
  user User @relation(fields: [userId], references: [id])
}

model CodeResetPassword {
  id     String @id @default(uuid())
  code   String
  userId String

  user User @relation(fields: [userId], references: [id])
}
